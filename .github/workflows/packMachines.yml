name: Pack Virtual Machine Images

on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      service:
        required: true
        type: string
      version:
        required: true
        type: string

permissions:
  contents: read

jobs:
  workflow_changes:
    with:
      what_to_check: ./.github
    uses: ./.github/workflows/checkForChanges.yml
    
  packer_changes:
    with:
      what_to_check: ./packer
    uses: ./.github/workflows/checkForChanges.yml

  packer_build:
    if: needs.workflow_changes.outputs.has_changes == 'true' || needs.packer_changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - provisioners: ${{ inputs.provisioners }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Packer
        uses: hashicorp/setup-packer@1aa358be5cf73883762b302a3a03abd66e75b232
        with:
          version: 1.11.2

      # Needed for ISO builder
      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25

      - name: Run `packer init`
        working-directory: ./packer/ubuntu-server
        id: init
        run: "packer init ./ubuntu.pkr.hcl"
    
      - name: Run `packer validate`
        working-directory: ./packer/ubuntu-server
        id: validate
        run: "packer validate ./ubuntu.pkr.hcl"

      - name: Build dibbs-ecr-viewer Packer Image
        if: github.event_name == 'push'
        working-directory: ./packer/ubuntu-server
        run: packer build --var-file=dibbs-ecr-viewer.pkr.hcl ./ubuntu.pkr.hcl
      
      - name: Build dibbs-query-connector Packer Image
        # if the event is a push to main
        if: github.event_name == 'push'
        working-directory: ./packer/ubuntu-server
        run: packer build --var-file=dibbs-query-connector.pkr.hcl ./ubuntu.pkr.hcl

      - name: Build Workflow Call Packer Image
        if: github.event_name == 'workflow_call' 
        working-directory: ./packer/ubuntu-server
        run: packer build --var dibbs_service=${{ inputs.service }} --var dibbs_version=${{ inputs.version }} ./ubuntu.pkr.hcl

        ## TODO: Decide how to export artifact.