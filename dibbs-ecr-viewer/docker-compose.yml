services:
  ecr-viewer:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/ecr-viewer:$DIBBS_VERSION
    restart: always
    env_file: "dibbs-ecr-viewer.env"
    ports:
      - "3000:3000"
    networks:
      - dibbs

  ingestion:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/ingestion:$DIBBS_VERSION
    restart: always
    ports:
      - "8080:8080"
    networks:
      - dibbs

  validation:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/validation:$DIBBS_VERSION
    restart: always
    ports:
      - "8081:8080"
    networks:
      - dibbs

  fhir-converter:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/fhir-converter:$DIBBS_VERSION
    restart: always
    ports:
      - "8082:8080"
    networks:
      - dibbs

  message-parser:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/message-parser:$DIBBS_VERSION
    restart: always
    ports:
      - "8083:8080"
    networks:
      - dibbs

  trigger-code-reference:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/trigger-code-reference:$DIBBS_VERSION
    restart: always
    ports:
      - "8084:8080"
    networks:
      - dibbs

  orchestration:
    image: ghcr.io/cdcgov/$DIBBS_SERVICE/orchestration:$DIBBS_VERSION
    env_file: "dibbs-orchestration.env"
    restart: always
    ports:
      - "8085:8080"
    networks:
      - dibbs

  portainer:
    image: portainer/portainer-ce
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - dibbs

  docs:
    build:
      context: ./../docs
      dockerfile: Dockerfile
    ports:
      - "80:80"

volumes:
  portainer_data:

networks:
  dibbs: